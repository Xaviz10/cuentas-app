{"version":3,"sources":["reducer/index.js","assets/static/icons/gastos-comunes-icon.svg","components/Header.jsx","assets/static/icons/calendar-icon.svg","assets/static/icons/comment-icon.svg","assets/static/icons/price-icon.svg","assets/static/icons/type-icon.svg","assets/static/icons/user-icon.svg","components/FormAccounts.jsx","actions/index.js","assets/static/icons/loading-icon.gif","components/PopUpConfirmation.jsx","assets/static/icons/refresh-icon.svg","components/TableViewer.jsx","containers/Home.jsx","App.js","index.js"],"names":["initialState","loading","data_send","error","current_account","accounts","reducer","state","action","console","log","Boolean","payload","type","Header","className","href","src","gastosComunesIcon","alt","FormAccounts","togglePopup","useState","costInput","setCostInput","useForm","register","handleSubmit","dispatch","useDispatch","onSubmit","data","setCurrentAccount","style","backgroundImage","calendarIcon","userIcon","typeIcon","value","priceIcon","onInput","event","num","toString","replace","addCommas","target","commentIcon","onClick","PopUpConfirmation","popupState","currentAccount","useSelector","dataSend","handleSendData","getState","a","newAccount","Axios","post","billData","setTimeout","loadingIcon","TableViewer","dateHourFormater","lastUpdate","setLastUpdate","table","get","length","refreshIcon","slice","reverse","map","row","index","Home","setPopupState","formatterCurrency","Intl","NumberFormat","currency","maximumFractionDigits","previus","today","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.036ce74c.chunk.js","sourcesContent":["const initialState = {\n    loading: false,\n    data_send: false,\n    error: null,\n    current_account: {\n        \"Fecha\": \"\",\n        \"Usuario\": \"\",\n        \"Tipo de gasto\": \"Sin datos, actualiza la tabla\",\n        \"Costo\": 0,\n        \"Comentario\": \"\"\n    },\n    accounts : [{\"Fecha\": \"\", \"Usuario\": \"\", \"Tipo de gasto\": `Sin datos, actualiza la tabla`, \"Costo\": \"\", \"Comentario\":\"\"}]\n}\n\n\n\n\nconst reducer = (state = initialState, action) => {\n    console.log('reducer', Boolean(action.payload))\n    switch (action.type) {\n        case 'RESET_DATA_SEND':\n    \n            return {\n                ...state,\n                data_send: false\n            }\n        case 'SET_CURRENT_ACCOUNT':\n            return {\n                ...state,\n                current_account: action.payload,\n            }\n        case 'POST_ACCOUNT_REQUESTED':\n            \n            return {\n                ...state,\n                loading: true,\n\n            }\n        case 'POST_ACCOUNT_DONE':\n        \n            return {\n                ...state,\n                loading: false,\n                data_send: true\n            }\n        case 'GET_ACCOUNTS_REQUESTED':\n        \n            return {\n                ...state,\n                loading: true,\n\n            }\n        case 'GET_ACCOUNTS_DONE':\n        \n            return {\n                ...state,\n                loading: false,\n                accounts: action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","export default __webpack_public_path__ + \"static/media/gastos-comunes-icon.6578e9ee.svg\";","import React from 'react';\nimport '../assets/styles/components/Header.css';\n\n\nimport gastosComunesIcon from '../assets/static/icons/gastos-comunes-icon.svg';\n\n\nconst Header = () => {\n\n    \n    return(    \n        <header className=\"header-gastos-comunes\">\n            <a href='#' className=\"header-gastos-comunes__logo\">\n                <img src={gastosComunesIcon} alt=\"Cuentas comunes logo\" />\n            </a>\n        </header>\n    );\n\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/calendar-icon.2219f59f.svg\";","export default __webpack_public_path__ + \"static/media/comment-icon.e2811a2f.svg\";","export default __webpack_public_path__ + \"static/media/price-icon.e822666f.svg\";","export default __webpack_public_path__ + \"static/media/type-icon.d8f40693.svg\";","export default __webpack_public_path__ + \"static/media/user-icon.83c6af46.svg\";","import React, { useState, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentAccount } from '../actions';\nimport '../assets/styles/components/FormAccounts.css';\n\nimport calendarIcon from '../assets/static/icons/calendar-icon.svg';\nimport commentIcon from '../assets/static/icons/comment-icon.svg';\nimport priceIcon from '../assets/static/icons/price-icon.svg';\nimport typeIcon from '../assets/static/icons/type-icon.svg';\nimport userIcon from '../assets/static/icons/user-icon.svg';\n\n\nconst FormAccounts = ({ togglePopup }) => {\n    const [costInput, setCostInput] = useState('')\n    \n    const { register, handleSubmit } = useForm();\n    const dispatch = useDispatch();\n\n    const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\n\n    \n    \n\n    const normalizeInput = event  => {\n        setCostInput(addCommas(removeNonNumeric(event.target.value)));\n    }\n\n    const onSubmit = data => {\n        dispatch(setCurrentAccount(data))\n    }\n    return (\n        <form className=\"new-account-form\" onSubmit={handleSubmit(onSubmit)}>\n            <h2 className=\"new-account-form__title\">Adicionar Gastos</h2>\n            <label >\n                Fecha:\n                <span style={{ backgroundImage: `url(${calendarIcon})` }}></span>\n                <input {...register('Fecha')} type=\"date\" ></input>\n            </label>\n            <label >\n                Usuario:\n                <span style={{ backgroundImage: `url(${userIcon})` }}></span>\n                <input {...register('Usuario')} type=\"text\" ></input>\n            </label>\n            <label >\n                Tipo de gasto:\n                <span style={{ backgroundImage: `url(${typeIcon})` }}></span>\n                <select {...register('Tipo de gasto')} >\n                    <option value=\"Arriendo\">Arriendo</option>\n                    <option value=\"Mercado\">Mercado</option>\n                    <option value=\"Luz\">Luz</option>\n                    <option value=\"Agua\">Agua</option>\n                    <option value=\"Gas\">Gás</option>\n                    <option value=\"Internet\">Internet</option>\n                    <option value=\"Domicilios\">Domicilios</option>\n                    <option value=\"Restaurantes\">Restaurantes</option>\n                    <option value=\"Gasto casa\">Gasto casa</option>\n                    <option value=\"Otros\">Otros</option>\n                </select>\n            </label>\n            <label >\n                Costo:\n                <span style={{ backgroundImage: `url(${priceIcon})` }}></span>\n                <input {...register('Costo')} type=\"text\" value={costInput} onInput={normalizeInput}></input>\n            </label>\n            <label >\n                Comentario (opcional):\n                <span style={{ backgroundImage: `url(${commentIcon})` }}></span>\n                <input {...register('Comentario')}type=\"text\"></input>\n            </label>\n            <input className=\"new-account-form__button\" type=\"submit\" value=\"Aceptar\" onClick={togglePopup}/>\n        </form>\n    );\n}\n\n\nexport default FormAccounts;","import Axios from 'axios';\n\nexport const postAccount = () => {\n    return async (dispatch, getState) => {\n        \n        const newAccount = getState().current_account;\n        dispatch({\n            type: 'POST_ACCOUNT_REQUESTED',\n        })\n        const billData = await Axios.post('https://sheet.best/api/sheets/985f20ae-8841-4340-bbdb-491b3c707508', newAccount)\n        console.log(billData)\n\n        dispatch({\n            type: 'POST_ACCOUNT_DONE',\n        })\n    }\n};\n\nexport const getAccounts = () => {\n    return async (dispatch) => {\n        \n        dispatch({\n            type: 'GET_ACCOUNTS_REQUESTED',\n        })\n        const accounts = await Axios.get('https://sheet.best/api/sheets/985f20ae-8841-4340-bbdb-491b3c707508')\n        console.log(\"ACCOUNTS\",accounts.data)\n\n        dispatch({\n            type: 'GET_ACCOUNTS_DONE',\n            payload: accounts.data.length ? accounts.data : [{\"Fecha\": \"\", \"Usuario\": \"\", \"Tipo de gasto\": `No se obtuvieron datos`, \"Costo\": \"\", \"Comentario\":\"\"}]\n        })\n    }\n};\n\nexport const setCurrentAccount = (data) => ({\n    type: 'SET_CURRENT_ACCOUNT',\n    payload: data,\n});\n\nexport const resetDataSend = () => ({\n    type: 'RESET_DATA_SEND',\n})","export default __webpack_public_path__ + \"static/media/loading-icon.7f79218f.gif\";","import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { postAccount, resetDataSend } from '../actions';\nimport '../assets/styles/components/PopUpConfirmation.css';\n\nimport loadingIcon from '../assets/static/icons/loading-icon.gif';\n\nconst PopUpConfirmation = ({ popupState, togglePopup }) => {\n\n    const dispatch = useDispatch();\n    const currentAccount = useSelector(state => state.current_account);\n    const loading = useSelector(state => state.loading);\n    const dataSend = useSelector(state => state.data_send);\n    \n    const handleSendData = () => {\n        dispatch(postAccount())\n    }\n\n    const handleDataSendConfirmation = () => {\n        console.log('Final')\n        setTimeout(() => {\n            dispatch(resetDataSend());\n        }, 2000)\n        setTimeout(() => {\n            togglePopup();\n        } , 2050)\n        \n    }\n\n    if (dataSend) {\n        handleDataSendConfirmation()\n    }\n\n    return (\n        <>         {\n            popupState ?\n                <div className=\"popup-outer-container\">\n                    <span className=\"close-popup\" onClick={togglePopup}>X</span>\n                    <div className=\"popup-container\">\n                        <h2 className=\"popup-title\">Verifica la información</h2>\n                        <article className=\"popup-description\">\n                            <p>Fecha del gasto: <span>{currentAccount['Fecha']}</span></p>\n                            <p>Usuario: <span>{currentAccount['Usuario']}</span></p>\n                            <p>Tipo de gasto: <span>{currentAccount['Tipo de gasto']}</span></p>\n                            <p>Costo: <span>{currentAccount['Costo']}</span></p>\n                            <p>Comentario: <span>{currentAccount['Comentario']}</span></p>\n                            {dataSend ? <p className=\"message-confirmation\"> La información fue envida! :)</p> : null}\n                        </article>\n                        {dataSend || loading ?\n                            <button className=\"confirmation-button\"> {loading ? <span style={{ backgroundImage: `url(${loadingIcon})` }}></span> : <>Confirmar</>}</button>\n                            :\n                            <button className=\"confirmation-button\" onClick={() => handleSendData()}> {loading ? <span style={{ backgroundImage: `url(${loadingIcon})` }}></span> : <>Confirmar</>}</button>\n                        }\n                        <button className=\"cancelation-button\" onClick={togglePopup}>Cancelar</button>\n                    </div >\n                </div>\n                : null\n        } </>\n\n\n    );\n}\n\nexport default PopUpConfirmation;","export default __webpack_public_path__ + \"static/media/refresh-icon.8429e74d.svg\";","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAccounts } from '../actions';\nimport '../assets/styles/components/TableViewer.css';\n\nimport loadingIcon from '../assets/static/icons/loading-icon.gif';\nimport refreshIcon from '../assets/static/icons/refresh-icon.svg';\nimport { set } from 'react-hook-form';\n\nconst TableViewer = ({dateHourFormater}) => {\n    const [lastUpdate, setLastUpdate] = useState(\"Nunca\")\n\n    const loading = useSelector(state => state.loading);\n    const table = useSelector(state => state.accounts);\n    const dispatch = useDispatch();\n\n\n    const handleGetAccounts = () => {\n        dispatch(getAccounts())\n        setLastUpdate(dateHourFormater());\n    }\n\n    return (\n        <div className=\"table-outer-container\">\n\n            <p className=\"table-last-update\">Última actualización: <span> { lastUpdate } </span> </p>\n            {loading ?\n                <button className=\"get-table-button\">\n                    <span className=\"get-table-button--loading-icon\" style={{ backgroundImage: `url(${loadingIcon})` }}></span>\n                </button>\n                :\n                <button className=\"get-table-button\" onClick={handleGetAccounts}>\n                    <span className=\"get-table-button--refresh-icon\" style={{ backgroundImage: `url(${refreshIcon})` }}></span>\n                    Actualizar Tabla\n                </button>\n            }\n\n            <h2 className=\"table-accounts-title\">Tabla de Gastos</h2>\n\n            <table className=\"table-accounts\">\n                <thead>\n                    <tr>\n                        <th>Fecha</th>\n                        <th>Usuario</th>\n                        <th>Tipo de gasto</th>\n                        <th>Costo</th>\n                        <th>Comentario</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {!loading ? table.slice(0).reverse().map((row,index) => {\n                        return (\n                            <tr key={index}>\n                                <th>{row['Fecha']}</th>\n                                <th>{row['Usuario']}</th>\n                                <th>{row['Tipo de gasto']}</th>\n                                <th>{row['Costo']}</th>\n                                <th>{row['Comentario']}</th>\n                            </tr>\n                        );\n                    })\n                    : <tr className=\"table-accounts--row-loading-icon\"><span className=\"table-accounts__loading-icon\" style={{ backgroundImage: `url(${loadingIcon})` }}></span></tr> \n                    }\n                </tbody>\n\n            </table>\n            <a className=\"table-accounts__link\" target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/175BoIJSFiQmeLXf3goVCcUeWnYjEt9QdIzUYcFyLnRQ/edit?usp=sharing\">Ir a tabla en Excel</a>\n        </div>\n    );\n}\n\nexport default TableViewer;","import React, { useState } from 'react';\nimport '../assets/styles/Home.css';\n\nimport Header from '../components/Header';\nimport FormAccounts from '../components/FormAccounts';\nimport PopUpConfirmation from '../components/PopUpConfirmation';\nimport TableViewer from '../components/TableViewer';\n\nconst Home = () => {\n\n    const [popupState, setPopupState] = useState(false);\n    const formatterCurrency = new Intl.NumberFormat('es-CO', {\n        style: 'currency',\n        currency: 'COP',\n        maximumFractionDigits: '0',\n    });\n\n    const dateHourFormater = () => {\n        const today = new Date();\n        return `${today.getDate()}/${today.getMonth()}/${today.getFullYear()}, ${today.getHours()}:${today.getMinutes()<10? `0${today.getMinutes()}` : today.getMinutes()}:${today.getSeconds()<10? `0${today.getSeconds()}`: today.getSeconds()}`\n    }\n\n    const togglePopup = () => {\n        setPopupState(previus => !previus)\n    }\n    return (\n        <div className=\"home-container\">\n            <Header/>\n            <FormAccounts togglePopup={togglePopup} />\n            <PopUpConfirmation popupState={popupState} togglePopup={togglePopup} formatterCurrency={formatterCurrency} />\n            <TableViewer dateHourFormater={dateHourFormater}/>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport './assets/styles/App.css';\n\nimport Home from './containers/Home';\n\n\nconst App = () => {\n    return (\n        <>\n            <Home />\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDom.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);"],"sourceRoot":""}